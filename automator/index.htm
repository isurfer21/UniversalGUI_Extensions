<!--intro{
### Automator (*Version 1.0.0*)
To ease the workflow, we have developed the automator tool that could
 - **Make a copy** of *cloned repository* in your local working directory, so that your *working repository* could be separated from the *cloned repository* that is used for reference and final code commit. 
 - **Synchronise** the *cloned repository* with your *working repository* before starting new task or at your will.
 - **Reverse synchronise** your *working repository* with the *cloned repository* when task gets completed or at your will.

#### Compatible with
 - Mac OSX, Windows, Linux

#### Note:
 - **Cloned repository** &rarr; It refers to git repository that is cloned from remote branch
 - **Working repository** &rarr; It refers to git repository that is local *working repository* based on *cloned repository*
}intro-->
<div class="ui message">
  <div class="header">Automator</div>
  <p>Fill out the form below then click on Execute button</p>
</div>
<form id="formis" class="ui form">
    <div class="field">
        <label>Repository's name</label>
        <div class="field">
            <input type="text" name="repositoryname" placeholder="component-template">
        </div>
    </div>
    <div class="field">
        <label>Perform action</label>
        <div class="ui selection dropdown">
            <input type="hidden" name="performaction">
            <i class="dropdown icon"></i>
            <div class="default text">Select action</div>
            <div class="menu">
                <div class="item" data-value="help">Help</div>
                <div class="item" data-value="copy">Copy</div>
                <div class="item" data-value="sync">Synchronize</div>
                <div class="item" data-value="rsync">Reverse Synchronize</div>
            </div>
        </div>
    </div>
    <button type="submit" class="ui button">Execute</button>
    <button type="reset" class="ui button">Clear</button>
</form>
<script>
    $(function(e) {
        var containers = {},
            controls = {},
            preferences;

        controls.loadPreferences = function(d) {
            preferences = d;
        };
        controls.submitForm = function(e) {
            e.preventDefault();
            var wt = WebTerminal.getInstance(),
                fp = FilePath.getInstance();
            var cmd = "", 
                val = wt.getFormFieldHashMap($(this));
            if (fp.isWindows()) {
                cmd = String("[0] -[1] [2] [3]").autofit(
                    fp.join(wt.getExtBasePath(), "automator", "automator.bat"),
                    val.performaction,
                    fp.join(preferences.SourcePath, val.repositoryname),
                    fp.join(preferences.GaragePath, val.repositoryname)
                );
            } else {
                cmd = String("cd [0] \n [1] -[2] [3] [4]").autofit(
                    fp.join(wt.getExtBasePath(), "automator"),
                    "sh automator",
                    val.performaction,
                    fp.join(preferences.SourcePath, val.repositoryname),
                    fp.join(preferences.GaragePath, val.repositoryname)
                );
            }            
            wt.executeCommand(cmd);
        };        
        controls.resetExtension = function(e) {
            var wt = WebTerminal.getInstance();
            wt.resetActiveExtension();
            containers.dropdowns.dropdown('restore defaults');
        };

        var attachEvents = function() {
            containers.formis.submit(controls.submitForm);
            containers.resetbtn.on('click', controls.resetExtension);
        }
        var initialize = function() {
            containers.formis = $('form#formis');
            containers.dropdowns = containers.formis.find('.ui.dropdown');
            containers.resetbtn = containers.formis.find(':reset');

            containers.dropdowns.dropdown();
            $.getJSON("/extension/automator/config.json", controls.loadPreferences);

            attachEvents();
        };
        
        initialize();
    });
</script>